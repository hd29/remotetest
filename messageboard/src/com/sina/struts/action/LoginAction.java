/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.sina.struts.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.sina.domain.Users;
import com.sina.service.UserService;
import com.sina.struts.form.UserForm;

/** 
 * MyEclipse Struts
 * Creation date: 11-25-2015
 * 
 * XDoclet definition:
 * @struts.action path="/login" name="userForm" parameter="flag" scope="request"
 */
public class LoginAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward login(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		UserForm userForm = (UserForm) form;// TODO Auto-generated method stub
		//这里需要调用service类完成验证  
		//根据用户的输入，我们创建users对象
		Users user=new Users();
		user.setName(userForm.getName());
		user.setPassword(userForm.getPassword());
		
		//创建service
		UserService userService=new UserService();
		//此处的userService.checkUser（user）中的参数user事先由Users的set方法把表单中的name和password设置给Users的实例化对象，然后再传给
		//userService.checkUser（user）中作为参数进行查询
		/*1.先从页面提交表单，表单中有数据之后把数据传给实体类users
		 *2.users中有数据了再把数据传给service，
		 *3.service中定义hql语句，调用hibernateUtil中一个统一的查询方法executeQuery（），hql为传入的参数，
		 *4.依靠hql语句和这个查询方法查询，如果结果集放到类型为Users的list里面 ，若结果集的大小等于1，说明能查得出数据，如果不能返回null值给checkUser这个方法；
		 *5.如果user的值不为null说明返回的值是一个list，是有数据的，就把user保存到session里面，反之就说明查不出，不存在此用户，就走loginerror那个方向返回原页面*/
		user=userService.checkUser(user);
		if(user!=null){
			request.getSession().setAttribute("userinfo", user);
			
			return mapping.findForward("loginSuccess");
		}else{
			return mapping.findForward("loginError");
		}
		
//		return null;
	}
}